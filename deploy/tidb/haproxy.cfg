global                                     # Global configuration.
   pidfile     /var/run/haproxy.pid        # Writes the PIDs of HAProxy processes into this file.
   maxconn     4000                        # The maximum number of concurrent connections for a single HAProxy process.
   user        haproxy                     # The same with the UID parameter.
   group       haproxy                     # The same with the GID parameter. A dedicated user group is recommended.
   nbproc      64                          # The number of processes created when going daemon. When starting multiple processes to forward requests, ensure that the value is large enough so that HAProxy does not block processes.
   daemon                                  # Makes the process fork into background. It is equivalent to the command line "-D" argument. It can be disabled by the command line "-db" argument.
defaults                                   # Default configuration.
   log global                              # Inherits the settings of the global configuration.
   retries 2                               # The maximum number of retries to connect to an upstream server. If the number of connection attempts exceeds the value, the backend server is considered unavailable.
   timeout connect  2s                     # The maximum time to wait for a connection attempt to a backend server to succeed. It should be set to a shorter time if the server is located on the same LAN as HAProxy.
   timeout client 30000s                   # The maximum inactivity time on the client side.
   timeout server 30000s                   # The maximum inactivity time on the server side.
listen tidb-cluster                        # Database load balancing.
   bind 0.0.0.0:3390                       # The Floating IP address and listening port.
   mode tcp                                # HAProxy uses layer 4, the transport layer.
   balance roundrobin                      # The server with the fewest connections receives the connection. "leastconn" is recommended where long sessions are expected, such as LDAP, SQL and TSE, rather than protocols using short sessions, such as HTTP. The algorithm is dynamic, which means that server weights might be adjusted on the fly for slow starts for instance.
   server tidb-1 10.24.14.175:4000 check inter 2000 rise 2 fall 3       # Detects port 4000 at a frequency of once every 2000 milliseconds. If it is detected as successful twice, the server is considered available; if it is detected as failed three times, the server is considered unavailable.
   server tidb-2 10.24.14.246:4000 check inter 2000 rise 2 fall 3
   server tidb-3 10.24.14.75:4000 check inter 2000 rise 2 fall 3
   server tidb-4 10.24.14.116:4000 check inter 2000 rise 2 fall 3
   server tidb-5 10.24.14.161:4000 check inter 2000 rise 2 fall 3
   server tidb-6 10.24.14.41:4000 check inter 2000 rise 2 fall 3
   server tidb-7 10.24.14.221:4000 check inter 2000 rise 2 fall 3
   server tidb-8 10.24.14.177:4000 check inter 2000 rise 2 fall 3
   server tidb-9 10.24.14.9:4000 check inter 2000 rise 2 fall 3
   #server tidb-10 10.24.14.311:4000 check inter 2000 rise 2 fall 3
   #server tidb-11 10.24.14.271:4000 check inter 2000 rise 2 fall 3
   #server tidb-12 10.24.14.241:4000 check inter 2000 rise 2 fall 3
   #server tidb-13 10.24.14.1492:4000 check inter 2000 rise 2 fall 3
   #server tidb-14 10.24.14.411:4000 check inter 2000 rise 2 fall 3
   #server tidb-15 10.24.14.58:4000 check inter 2000 rise 2 fall 3
